{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\ECE\\\\Bioloc\\\\src\\\\components\\\\Avis\\\\Avis.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Commercant extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      fetch(`http://localhost:3001/posts`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify({\n          nom: this.state.nom,\n          avis: this.state.avis,\n          categorie: this.props.category,\n          position: this.props.position\n        })\n      }).then(function (response) {// console.log(response);\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      avis: '',\n      nom: '',\n      data: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3001/posts`).then(response => {\n      return response.json();\n    }).then(result => {\n      this.setState({\n        data: result\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"avis\",\n            value: this.state.avis,\n            onChange: this.handleChange,\n            placeholder: \"Avis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"nom\",\n            value: this.state.nom,\n            onChange: this.handleChange,\n            placeholder: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn btn-outline-primary btn-rounded\",\n            \"data-mdb-ripple-color\": \"dark\",\n            children: \"Laisser un avis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), this.state.data.map(empresa => {\n        if (empresa.categorie == this.props.categorie) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.avis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [empresa.categorie, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Commercant;","map":{"version":3,"sources":["D:/ECE/Bioloc/src/components/Avis/Avis.js"],"names":["React","Component","Link","Commercant","constructor","props","handleSubmit","event","fetch","method","headers","body","JSON","stringify","nom","state","avis","categorie","category","position","then","response","preventDefault","data","handleChange","bind","setState","target","name","value","componentDidMount","json","result","render","map","empresa"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Commercant extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      avis: '',\r\n      nom: '',\r\n      data: []\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    fetch(`http://localhost:3001/posts`)\r\n      .then((response) => {\r\n        return response.json()\r\n\r\n      })\r\n\r\n      .then((result) => {\r\n        this.setState({ data: result });\r\n\r\n      })\r\n\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    fetch(`http://localhost:3001/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // We convert the React state to JSON and send it as the POST body\r\n      body: JSON.stringify({\r\n        nom: this.state.nom,\r\n        avis: this.state.avis,\r\n        categorie: this.props.category,\r\n        position: this.props.position\r\n      })\r\n    }).then(function (response) {\r\n      // console.log(response);\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n          <div className=\"form-group text-center\">\r\n            <input type=\"text\" name=\"avis\" value={this.state.avis} onChange={this.handleChange} placeholder=\"Avis\" />\r\n            <input type=\"text\" name=\"nom\" value={this.state.nom} onChange={this.handleChange} placeholder=\"Nom\" />\r\n            <button type=\"submit\" class=\"btn btn-outline-primary btn-rounded\" data-mdb-ripple-color=\"dark\">\r\n              Laisser un avis\r\n          </button>\r\n          </div>\r\n        </form>\r\n        {\r\n\r\n\r\n          this.state.data.map(empresa => {\r\n\r\n            if (empresa.categorie == this.props.categorie) {\r\n\r\n              return (\r\n                <tr>\r\n                  <td>{empresa.nom}</td>\r\n                  <td>{empresa.avis}</td>\r\n                  <td>{empresa.categorie} </td>\r\n\r\n                </tr>\r\n              )\r\n            }\r\n\r\n          })\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Commercant;"]},"metadata":{},"sourceType":"module"}