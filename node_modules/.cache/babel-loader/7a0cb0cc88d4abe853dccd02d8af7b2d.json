{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\djebr\\\\Documents\\\\ProjetPPE\\\\src\\\\components\\\\Graph3\\\\Graph3.js\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\nconst bounceAnimation = keyframes`${fadeIn}`;\nconst BouncyDiv = styled.div`\n  animation: 1s ${bounceAnimation};\n`;\n_c = BouncyDiv;\n\nfunction numStr(a, b) {\n  a = '' + a;\n  b = b || ' ';\n  let c = '',\n      d = 0;\n\n  while (a.match(/^0[0-9]/)) {\n    a = a.substr(1);\n  }\n\n  for (let i = a.length - 1; i >= 0; i--) {\n    c = d !== 0 && d % 3 === 0 ? a[i] + b + c : a[i] + c;\n    d++;\n  }\n\n  return c;\n}\n\nclass Graph3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Countries: [],\n      series: [{\n        name: 'Cas',\n        data: []\n      }, {\n        name: 'Morts',\n        data: []\n      }, {\n        name: 'Réanimations',\n        data: []\n      }, {\n        name: 'Guéris',\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 350,\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        xaxis: {\n          show: true,\n          labels: {\n            formatter: function (value) {\n              return numStr(value, \".\");\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        title: {\n          text: '',\n          align: 'left'\n        },\n        legend: {\n          show: false\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://coronavirus-19-api.herokuapp.com/countries').then(response => {\n      return response.json();\n    }).then(result => {\n      this.setState({\n        Countries: result\n      });\n      this.setState({\n        series: [{\n          data: [this.state.Countries[10].cases, this.state.Countries[9].cases, this.state.Countries[8].cases, this.state.Countries[7].cases, this.state.Countries[6].cases, this.state.Countries[5].cases, this.state.Countries[4].cases, this.state.Countries[3].cases, this.state.Countries[2].cases, this.state.Countries[1].cases]\n        }, {\n          data: [this.state.Countries[10].deaths, this.state.Countries[9].deaths, this.state.Countries[8].deaths, this.state.Countries[7].deaths, this.state.Countries[6].deaths, this.state.Countries[5].deaths, this.state.Countries[4].deaths, this.state.Countries[3].deaths, this.state.Countries[2].deaths, this.state.Countries[1].deaths]\n        }, {\n          data: [this.state.Countries[10].recovered, this.state.Countries[9].recovered, this.state.Countries[8].recovered, this.state.Countries[7].recovered, this.state.Countries[6].recovered, this.state.Countries[5].recovered, this.state.Countries[4].recovered, this.state.Countries[3].recovered, this.state.Countries[2].recovered, this.state.Countries[1].recovered]\n        }, {\n          data: [this.state.Countries[10].critical, this.state.Countries[9].critical, this.state.Countries[8].critical, this.state.Countries[7].critical, this.state.Countries[6].critical, this.state.Countries[5].critical, this.state.Countries[4].critical, this.state.Countries[3].critical, this.state.Countries[2].critical, this.state.Countries[1].critical]\n        }]\n      });\n      this.setState({\n        options: {\n          xaxis: {\n            categories: [this.state.Countries[10].country, this.state.Countries[9].country, this.state.Countries[8].country, this.state.Countries[7].country, this.state.Countries[6].country, this.state.Countries[5].country, this.state.Countries[4].country, this.state.Countries[3].country, this.state.Countries[2].country, this.state.Countries[1].country]\n          }\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BouncyDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: this.state.options,\n            series: this.state.series,\n            type: \"bar\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Graph3;\n\nvar _c;\n\n$RefreshReg$(_c, \"BouncyDiv\");","map":{"version":3,"sources":["C:/Users/djebr/Documents/ProjetPPE/src/components/Graph3/Graph3.js"],"names":["React","Component","ReactApexChart","styled","keyframes","fadeIn","bounceAnimation","BouncyDiv","div","numStr","a","b","c","d","match","substr","i","length","Graph3","constructor","props","state","Countries","series","name","data","options","chart","type","height","stacked","plotOptions","bar","horizontal","xaxis","show","labels","formatter","value","dataLabels","enabled","stroke","curve","title","text","align","legend","grid","row","colors","opacity","componentDidMount","fetch","then","response","json","result","setState","cases","deaths","recovered","critical","categories","country","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { fadeIn } from 'react-animations';\r\n\r\n\r\nconst bounceAnimation = keyframes`${fadeIn}`;\r\n\r\nconst BouncyDiv = styled.div`\r\n  animation: 1s ${bounceAnimation};\r\n`;\r\nfunction numStr(a, b) {\r\n    a = '' + a;\r\n    b = b || ' ';\r\n    let c = '',\r\n        d = 0;\r\n    while (a.match(/^0[0-9]/)) {\r\n        a = a.substr(1);\r\n    }\r\n    for (let i = a.length - 1; i >= 0; i--) {\r\n        c = (d !== 0 && d % 3 === 0) ? a[i] + b + c : a[i] + c;\r\n        d++;\r\n    }\r\n    return c;\r\n}\r\nclass Graph3 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Countries: [],\r\n            series: [{\r\n                name: 'Cas',\r\n                data: []\r\n            }, {\r\n                name: 'Morts',\r\n                data: []\r\n            }, {\r\n                name: 'Réanimations',\r\n                data: []\r\n            }, {\r\n                name: 'Guéris',\r\n                data: []\r\n            }],\r\n            options: {\r\n                chart: {\r\n                    type: 'bar',\r\n                    height: 350,\r\n                    stacked: true,\r\n\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: true,\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    show: true,\r\n                    labels: {\r\n                        formatter: function (value) {\r\n                            return numStr(value, \".\");\r\n                        }\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    curve: 'straight'\r\n                },\r\n                title: {\r\n                    text: '',\r\n                    align: 'left'\r\n                },\r\n                legend: {\r\n                    show: false,\r\n                },\r\n                grid: {\r\n                    row: {\r\n                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                        opacity: 0.5\r\n                    },\r\n                }\r\n            },\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://coronavirus-19-api.herokuapp.com/countries')\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n\r\n            .then((result) => {\r\n                this.setState({ Countries: result });\r\n                this.setState({\r\n                    series: [{\r\n                        data: [this.state.Countries[10].cases, this.state.Countries[9].cases, this.state.Countries[8].cases, this.state.Countries[7].cases, this.state.Countries[6].cases, this.state.Countries[5].cases, this.state.Countries[4].cases, this.state.Countries[3].cases, this.state.Countries[2].cases, this.state.Countries[1].cases]\r\n                    }, { data: [this.state.Countries[10].deaths, this.state.Countries[9].deaths, this.state.Countries[8].deaths, this.state.Countries[7].deaths, this.state.Countries[6].deaths, this.state.Countries[5].deaths, this.state.Countries[4].deaths, this.state.Countries[3].deaths, this.state.Countries[2].deaths, this.state.Countries[1].deaths] }\r\n                        , { data: [this.state.Countries[10].recovered, this.state.Countries[9].recovered, this.state.Countries[8].recovered, this.state.Countries[7].recovered, this.state.Countries[6].recovered, this.state.Countries[5].recovered, this.state.Countries[4].recovered, this.state.Countries[3].recovered, this.state.Countries[2].recovered, this.state.Countries[1].recovered,] },\r\n                    { data: [this.state.Countries[10].critical, this.state.Countries[9].critical, this.state.Countries[8].critical, this.state.Countries[7].critical, this.state.Countries[6].critical, this.state.Countries[5].critical, this.state.Countries[4].critical, this.state.Countries[3].critical, this.state.Countries[2].critical, this.state.Countries[1].critical,] }]\r\n\r\n                })\r\n                this.setState({\r\n                    options: {\r\n                        xaxis: {\r\n                            categories: [this.state.Countries[10].country, this.state.Countries[9].country, this.state.Countries[8].country, this.state.Countries[7].country, this.state.Countries[6].country, this.state.Countries[5].country, this.state.Countries[4].country, this.state.Countries[3].country, this.state.Countries[2].country, this.state.Countries[1].country],\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <BouncyDiv>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>\r\n                    </div>\r\n\r\n                    <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n                </div>\r\n\r\n            </div>\r\n            </BouncyDiv>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph3;\r\n\r\n"]},"metadata":{},"sourceType":"module"}